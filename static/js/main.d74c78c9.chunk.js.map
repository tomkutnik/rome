{"version":3,"sources":["components/Stack.js","components/Gamefield.js","App.js","index.js"],"names":["Stack","display","shown","stackSize","stack","stackSet","onSubmit","useState","inputValue","setInputValue","number","setNumber","className","for","type","name","min","value","max","onChange","target","document","getElementsByClassName","onClick","Gamefield","stackOne","setStackOne","stackTwo","setStackTwo","stackThree","setStackThree","currentCard","setCurrentCard","result","setResult","log","setLog","takeCoin","amount","gameMove","gameLogic","top","mid","bot","setTop","setMid","setBot","posOne","posTwo","randomStack","Math","floor","random","tempStack","console","src","alt","window","location","reload","href","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d74c78c9.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Stack({ shown, stackSize, stack, stackSet, onSubmit }) {\r\n    const [inputValue, setInputValue] = useState(0)\r\n    const [number, setNumber] = useState(stackSize)\r\n    const handleChange = () => {\r\n        const target = document.getElementsByClassName(\"quantity\");\r\n        setNumber(stackSize - target[stack].value);\r\n        setInputValue(target[stack].value);\r\n    }\r\n\r\n    let display;\r\n    if (stackSize !== 0) {\r\n        display =\r\n            <div className=\"stackControl\">\r\n                {shown === \"yes\" ? <div><form>\r\n                    <label for=\"stack\">How many you want to take?</label>\r\n                    <input type=\"number\" className=\"quantity\" name=\"quantity\" min=\"1\" value={inputValue} max={stackSize} onChange={handleChange} />\r\n                </form>\r\n                    {inputValue !==0 ? <button className=\"stack__btn\" onClick={() => {onSubmit(stackSet, number); setInputValue(0)}}>Take</button> : <button className=\"stack__btn\">Take</button>}\r\n                </div> : <div className=\"quantity\"></div>}\r\n\r\n            </div>\r\n    \r\n}else {\r\n    display = <div className=\"quantity\"></div>\r\n\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        {display}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Stack;","import Stack from \"./Stack\"\r\nimport { useState, } from 'react';\r\n\r\n\r\nfunction Gamefield() {\r\n\r\n    const [stackOne, setStackOne] = useState(7);\r\n    const [stackTwo, setStackTwo] = useState(5);\r\n    const [stackThree, setStackThree] = useState(3);\r\n    const [currentCard, setCurrentCard] = useState(1);\r\n    const [result, setResult] = useState(0)\r\n    const [log, setLog] = useState(\"\")\r\n\r\n    const takeCoin = (stack, amount) => {\r\n        stack(amount);\r\n        setCurrentCard(0);\r\n\r\n\r\n    }\r\n\r\n    const pileCheck = () => {\r\n        if (stackOne !== 0) {\r\n            setCurrentCard(1);\r\n        } else if (stackTwo !== 0) {\r\n            setCurrentCard(2);\r\n        } else {\r\n            setCurrentCard(3);\r\n        }\r\n    }\r\n\r\n    const endTurn = () => {\r\n        gameMove();\r\n\r\n    }\r\n\r\n    const gameMove = () => {\r\n        const gameLogic = (top, mid, bot, setTop, setMid, setBot, posOne, posTwo) => {\r\n\r\n            if (stackOne === 0 && stackTwo === 0 && stackThree === 0) {\r\n                setLog(\"\");\r\n                setResult(1);\r\n            } else if (stackOne > 1 && stackTwo > 1 && stackThree > 1) {\r\n                let randomStack = Math.floor(Math.random() * 3);\r\n                if (randomStack === 0) {\r\n                    let tempStack = stackOne - 1\r\n                    tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from first stack\") : setLog(\"Bot took \" + tempStack + \" coin from first stack\")\r\n                    setStackOne(1);\r\n                } else if (randomStack === 1) {\r\n                    let tempStack = stackTwo - 1\r\n                    tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from second stack\") : setLog(\"Bot took \" + tempStack + \" coin from second stack\")\r\n                    setStackTwo(1);\r\n                } else {\r\n                    let tempStack = stackThree - 1\r\n                    tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from third stack\") : setLog(\"Bot took \" + tempStack + \" coin from third stack\")\r\n                    setStackThree(1);\r\n                }\r\n            } else if (bot === 1) {\r\n                if (mid === 1) {\r\n                    if (top === 1) {\r\n                        setBot(0);\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posOne + \" stack\")\r\n                    } else {\r\n                        let tempStack = top - 1\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(1);\r\n                    }\r\n                } else {\r\n                    if (mid === 2) {\r\n                        if (top > 5) {\r\n                            let tempStack = top - 5\r\n                            tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                            setTop(5);\r\n                        } else if (top > 3) {\r\n                            let tempStack = top - 3\r\n                            tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                            setTop(3);\r\n                        } else {\r\n                            let tempStack = mid - 1\r\n                            tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posTwo + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posTwo + \" stack\");\r\n\r\n                            setMid(1);\r\n                        }\r\n                    } else if (mid === 3) {\r\n                        console.log(posOne);\r\n                        console.log(posTwo);\r\n                        setLog(\"Bot took 1 coin from \" + posTwo + \" stack\")\r\n                        setMid(2);\r\n                    } else if (mid === 4) {\r\n                        if (top > 5) {\r\n                            let tempStack = top - 5\r\n                            tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                            setTop(5);\r\n                        } else {\r\n                            let tempStack = mid - 2\r\n                            tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posTwo + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posTwo + \" stack\");\r\n                            setMid(2);\r\n                        }\r\n                    } else if (mid === 5) {\r\n                        setLog(\"Bot took 1 coin from \" + posTwo + \" stack\")\r\n                        setMid(4);\r\n                    }\r\n                }\r\n            } else {\r\n                if (mid === 0) {\r\n                    if (top > 1) {\r\n                        let tempStack = top - 1\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(1);\r\n                    } else {\r\n                        setTop(0);\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posOne + \" stack\")\r\n                        setResult(2);\r\n                    }\r\n                }\r\n                if (mid === 1) {\r\n                    if (top === 1) {\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posTwo + \" stack\")\r\n                        setMid(0);\r\n                    } else {\r\n                        let tempStack = top;\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(0);\r\n                    }\r\n                } else if (mid === 2) {\r\n                    if (top > 2) {\r\n                        let tempStack = top - 2\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(2);\r\n                    } else {\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posTwo + \" stack\")\r\n                        setMid(1);\r\n                    }\r\n                } else if (mid === 3) {\r\n                    if (top > 3) {\r\n                        let tempStack = top - 3\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(3);\r\n                    } else {\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posTwo + \" stack\")\r\n                        setMid(2);\r\n                    }\r\n                } else if (mid === 4) {\r\n                    if (top > 4) {\r\n                        let tempStack = top - 4\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(4);\r\n                    } else {\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posTwo + \" stack\")\r\n                        setMid(3);\r\n                    }\r\n                } else if (mid === 5) {\r\n                    if (top > 5) {\r\n                        let tempStack = top - 5\r\n                        tempStack !== 1 ? setLog(\"Bot took \" + tempStack + \" coins from \" + posOne + \" stack\") : setLog(\"Bot took \" + tempStack + \" coin from \" + posOne + \" stack\");\r\n                        setTop(5);\r\n                    } else {\r\n                        setLog(\"Bot took \" + 1 + \" coin from \" + posTwo + \" stack\")\r\n                        setMid(4);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (stackOne >= stackTwo && stackOne >= stackThree) {\r\n            if (stackTwo >= stackThree) {\r\n                gameLogic(stackOne, stackTwo, stackThree, setStackOne, setStackTwo, setStackThree, \"first\", \"second\");\r\n            } else {\r\n                gameLogic(stackOne, stackThree, stackTwo, setStackOne, setStackThree, setStackTwo, \"first\",\"third\");\r\n            }\r\n        } else if (stackOne < stackTwo && stackOne >= stackThree) {\r\n            gameLogic(stackTwo, stackOne, stackThree, setStackTwo, setStackOne, setStackThree, \"second\",\"first\");\r\n        } else if (stackOne >= stackTwo && stackOne < stackThree) {\r\n            gameLogic(stackThree, stackOne, stackTwo, setStackThree, setStackOne, setStackTwo, \"third\", \"first\");\r\n        } else if (stackOne < stackTwo && stackOne < stackThree) {\r\n            if (stackTwo >= stackThree) {\r\n                gameLogic(stackTwo, stackThree, stackOne, setStackTwo, setStackThree, setStackOne, \"second\", \"third\");\r\n            } else {\r\n                gameLogic(stackThree, stackTwo, stackOne, setStackThree, setStackTwo, setStackOne, \"third\", \"second\");\r\n            }\r\n        }\r\n\r\n\r\n        pileCheck();\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"cardBox\">\r\n                <div className=\"card\"><button className=\"card__pile\" onClick={() => setCurrentCard(1)}>\r\n                    <img className=\"card__pile-img\" src={\"./\" + stackOne + \".png\"} alt={stackOne} />\r\n                </button>\r\n                    {currentCard === 1 ? <Stack shown={\"yes\"} stackSize={stackOne} stack={0} stackSet={setStackOne} onSubmit={takeCoin} /> : <Stack shown={\"no\"} stackSize={stackOne} stack={0} stackSet={setStackOne} onSubmit={takeCoin} />}\r\n\r\n                </div>\r\n                <div className=\"card\"><button className=\"card__pile\" onClick={() => setCurrentCard(2)}>\r\n                    <img className=\"card__pile-img\" src={\"./\" + stackTwo + \".png\"} alt={stackTwo} />         </button>\r\n                    {currentCard === 2 ? <Stack shown={\"yes\"} stackSize={stackTwo} stack={1} stackSet={setStackTwo} onSubmit={takeCoin} /> : <Stack shown={\"no\"} stackSize={stackTwo} stack={1} stackSet={setStackTwo} onSubmit={takeCoin} />}\r\n                </div>\r\n                <div className=\"card\"><button className=\"card__pile\" onClick={() => setCurrentCard(3)}>\r\n                    <img className=\"card__pile-img\" src={\"./\" + stackThree + \".png\"} alt={stackThree} />           </button>\r\n                    {currentCard === 3 ? <Stack shown={\"yes\"} stackSize={stackThree} stack={2} stackSet={setStackThree} onSubmit={takeCoin} /> : <Stack shown={\"no\"} stackSize={stackThree} stack={2} stackSet={setStackThree} onSubmit={takeCoin} />}\r\n                </div>\r\n            </div>\r\n            {currentCard === 0 ? <button className=\"gamefield__btn\" onClick={endTurn()}></button> : \"\"}\r\n            {result === 0 ? <div className=\"logWindow\">\r\n                {log}\r\n            </div> : \"\"}\r\n\r\n            <div className=\"instructions\">\r\n                Rules:\r\n                <ol className=\"instructions__list\">\r\n                    <li>Click on gold pile to choose one.</li>\r\n                    <li>Take any amount of coins in single pile.</li>\r\n                    <li>Last coin taken from board = lost.</li>\r\n                </ol>\r\n                Enjoy!\r\n            </div>\r\n\r\n            {result === 0 ? \"\" : <div className=\"result\">\r\n                {result === 1 ? \"I HAVE WON!\" : \"I have lost... :(\"}\r\n                <p>One more time?</p>\r\n                <button className=\"result__btn\" onClick={() => window.location.reload()}>YES!</button>\r\n                <a href=\"https://tomkutnik.github.io/FEPortfolio/\"><button className=\"result__btn\">No...</button></a>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Gamefield","import Gamefield from \"./components/Gamefield\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gamefield/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./css/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}